### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Alternative {
  id: ID!
  text: String!
  votation: Votation
}

enum MajorityType {
  QUALIFIED
  SIMPLE
}

type Meeting {
  description: String
  id: ID!
  owner: User!
  startTime: String!
  status: Status!
  title: String!
  votations: [Votation]
}

type Mutation {
  addUser(email: String!, id: String!, username: String!): User
}

type Query {
  hello: [Alternative]
  meetings: [Meeting]!
  user(id: String!): User!
  users: [User]!
}

enum Status {
  ENDED
  ONGOING
  UPCOMING
}

type User {
  email: String!
  id: ID!
  username: String!
}

type Votation {
  alternatives: [Alternative]
  blankVotes: Boolean
  description: String!
  hasVoted: [User]
  id: ID!
  majorityThreshold: Int!
  majorityType: MajorityType!
  meeting: Meeting!
  order: Int
  status: Status!
  title: String!
}
