name: Lint
on: push

jobs:
    lint:
        runs-on: ubuntu-latest
        name: Run linters
        steps:
            - name: Check out Git repository
              uses: actions/checkout@v2
            - uses: actions/cache@v2
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

            - name: Set up Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            - name: Install Node.js dependencies
              run: yarn

            - name: Run linters
              uses: wearerequired/lint-action@v1
              with:
                  eslint: true
                  prettier: true
                  github_token: ${{ secrets.GITHUB_TOKEN }}
    test:
        runs-on: ubuntu-latest
        container: node:14-alpine
        services:
            # Label used to access the service container
            postgres:
                # Docker Hub image
                image: postgres:12
                # Provide the password for postgres
                env:
                    POSTGRES_PASSWORD: votingsecret
                    POSTGRES_DB: votingdb
                # Set health checks to wait until postgres has started
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Check out repository code
              uses: actions/checkout@v2
            - name: Set up Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: 14
            - name: Install Node.js dependencies
              run: yarn
            - name: Run tests
              run: yarn test
              env:
                  DATABASE_URL: 'postgresql://postgres:votingsecret@localhost:5432/votingdb'
